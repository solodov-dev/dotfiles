#!/bin/bash
################################################################################
# Help                                                                         #
################################################################################
Help()
{
  # Display Help
  echo "This script tangles codeblocks from the given md file to the specified file overwriting it"
  echo
  echo "Syntax: $(basename $0) [-h] [input] [output]"
  echo
  echo "Options:"
  echo "input  : tangle from file FILE. Must be a valid markdown file." 
  echo "output : tangle to FILE. If any destinations are given in the markdown file, they will be ignored."
  echo
}
################################################################################
# Main                                                                         #
################################################################################
# Get the options
while getopts ":hi:o:" option; do
   case $option in
      h) # display Help
        Help
        exit
        ;;
      ?)
        echo -e "Invalid command option.\nUsage: $(basename $0) [-h] [input] [output]"
        exit
        ;;
   esac
done

input=$1
output=$2

if [[ -z "$input" ]]
then
  echo "No input file specified. Please use -h for help."
  exit
fi

if [[ ! -f "$input" ]] 
then
  echo "Input file ${input} doesn't exist."
  exit
fi

if [[ ! $input == *.md ]]
then
  echo "File ${input} is not a markdown file"
  exit
fi

if [[ -z $output ]]
then
  echo "Output file is not specified"
  exit
fi

echo "Tangling file: ${input} to ${output}"

lines=""
insideCodeBlock=false

while IFS= read -r line
do
  if [[ $line == \`\`\`* ]]
  then
    if $insideCodeBlock
    then
      insideCodeBlock=false 
    else
      insideCodeBlock=true 
    fi
    continue
  fi

  if $insideCodeBlock
  then
    lines+=$line
    lines+="\n"
  fi
done < "$input"

echo -e $lines > $output
